[tool:pytest]
# pytest 配置文件

# 测试发现
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# 测试目录
testpaths = tests

# 最小版本要求
minversion = 6.0

# 添加选项
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --durations=10
    --color=yes
    --cov=.
    --cov-report=html:tests/htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --html=tests/reports/report.html
    --self-contained-html
    --junitxml=tests/reports/junit.xml
    --maxfail=5
    --disable-warnings

# 标记定义
markers =
    unit: 单元测试标记
    integration: 集成测试标记
    performance: 性能测试标记
    slow: 慢速测试标记（运行时间 > 5秒）
    network: 需要网络连接的测试
    browser: 需要浏览器的测试
    api: API相关测试
    export: 数据导出测试
    dedup: 去重功能测试
    analysis: 价值分析测试
    scraping: 抓取功能测试

# 过滤警告
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# 日志配置
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# 异步测试配置
asyncio_mode = auto

# 覆盖率配置
[coverage:run]
source = .
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = tests/htmlcov

[coverage:xml]
output = tests/coverage.xml